/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestiondeprocesos;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Arnold_Irias
 */
public class frmProcesos extends javax.swing.JFrame {

    AnalisisProcesos resultados;
    DefaultTableModel t;
    DefaultTableModel t1;
    DefaultTableModel t2;
    long memoria;
    String[] enc = {"PID", "Nombre", "usoCPU", "usoMemoria", "SP"};
    String[] enc2 = {"PID", "Nombre", "usoCPU", "usoMemori", "SP"};
    Validaciones v = new Validaciones();

    String[][][][][] datos = null;
    String titulo[] = {"Procesos con mayor uso de CPU", "Procesos con mayor uso de memoria RAM", "Procesos con mayor n√∫mero de instancias"};
    int indice = 0;

    /**
     * Creates new form frmProcesos
     *
     * @param resultados
     */
    public frmProcesos(AnalisisProcesos resultados, long memoria) {
        initComponents();

        this.resultados = resultados;
        this.memoria = memoria;
        lblTitulo.setText(titulo[indice]);
        btnAnterior.setEnabled(false);

        inicializar();
        jTable3.setModel(t);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        btnAnterior = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnSiguiente = new javax.swing.JButton();
        lblTitulo = new javax.swing.JLabel();
        btnProceso = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jTable3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));
        jTable3.setFont(new java.awt.Font("Gulim", 1, 12)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre del Proceso", "PID", "usoCPU", "usoMemoria"
            }
        ));
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTable3MouseEntered(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);

        btnAnterior.setText("Anterior");
        btnAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnteriorActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnSiguiente.setText("Siguiente");
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        lblTitulo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("jLabel1");

        btnProceso.setText("Finalizar proceso");
        btnProceso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcesoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAnterior)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSiguiente)
                        .addGap(73, 73, 73)
                        .addComponent(btnProceso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSalir))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 601, Short.MAX_VALUE)
                            .addComponent(lblTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 20, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalir)
                    .addComponent(btnSiguiente)
                    .addComponent(btnAnterior)
                    .addComponent(btnProceso))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        // TODO add your handling code here:
        boolean estado = false;
        int i = jTable3.getSelectedRow();
        String cadena = (String) jTable3.getModel().getValueAt(i, 0);
        for (int j = 0; j < cadena.length(); j++) {
            if (cadena.charAt(j) == ',') {
                estado = true;
                break;
            }
        }

        if (estado) {
            String[] matar = cadena.split(",");
            v.MatarConjuntoDeProcesos(matar);
        } else {
            v.MatarProceso(cadena);
        }

    }//GEN-LAST:event_jTable3MouseClicked

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        indice++;
        DesactivarBotones(indice);
        lblTitulo.setText(titulo[indice]);

        if (indice == 0) {
            jTable3.setModel(t);
        } else if (indice == 1) {
            jTable3.setModel(t1);
        } else {
            jTable3.setModel(t2);
        }
    }//GEN-LAST:event_btnSiguienteActionPerformed
    public void DesactivarBotones(int indice) {
        if (indice == 0) {
            btnAnterior.setEnabled(false);
            btnSiguiente.setEnabled(true);
        } else if (indice == 2) {
            btnSiguiente.setEnabled(false);
            btnAnterior.setEnabled(true);
        } else {
            btnSiguiente.setEnabled(true);
            btnAnterior.setEnabled(true);
        }
    }
    private void btnAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnteriorActionPerformed
        indice--;
        DesactivarBotones(indice);
        lblTitulo.setText(titulo[indice]);

        if (indice == 0) {
            jTable3.setModel(t);
        } else if (indice == 1) {
            jTable3.setModel(t1);
        } else {
            jTable3.setModel(t2);
        }
    }//GEN-LAST:event_btnAnteriorActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnProcesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcesoActionPerformed
        try {
            Validaciones validacion = new Validaciones();
            String cm = JOptionPane.showInputDialog("PID del Proceso:");
            if (validacion.ProcesoEnEjecucion(cm) == true) {
                validacion.MatarProceso(cm);
            } else {
                JOptionPane.showMessageDialog(null, "No se est√° ejecutando el proceso con PID: " + cm);
            }
        } catch (IOException ex) {
            Logger.getLogger(AdministradordeTareas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnProcesoActionPerformed

    private void jTable3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable3MouseEntered

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnterior;
    private javax.swing.JButton btnProceso;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable3;
    private javax.swing.JLabel lblTitulo;
    // End of variables declaration//GEN-END:variables

    private void inicializar() {
        t = new DefaultTableModel(datos, enc2);
        t1 = new DefaultTableModel(datos, enc2);
        t2 = new DefaultTableModel(datos, enc2);

        t.setColumnIdentifiers(enc2);
        t1.setColumnIdentifiers(enc2);
        t2.setColumnIdentifiers(enc2);

        resultados.generarResultados();

        for (Proceso q : resultados.getProcesosMaxCPU()) {
            //q.generarResultados();
            Object x = new Object[]{q.getPID(), q.getNombre(), String.format("%.1f %%", q.getUsoCPU()), String.format("%.1f %% (%4.1f MB)", q.getUsoMemoria(), memoria * q.getUsoMemoria() / (100 * 1024 * 1024))};
            t.addRow((Object[]) x);
        }

        for (Proceso f : resultados.getProcesosMaxMemoria()) {
            //q.generarResultados();
            Object x1 = new Object[]{f.getPID(), f.getNombre(), String.format("%.1f %%", f.getUsoCPU()), String.format("%.1f %% (%4.1f MB)", f.getUsoMemoria(), memoria * f.getUsoMemoria() / (100 * 1024 * 1024))};
            t1.addRow((Object[]) x1);
        }

        for (String cadena : resultados.generarResultadosSP()) {
            String[] r = cadena.split(":");
            String[] datos = r[1].split(",");
            Object x2 = new Object[]{r[0], datos[0], String.format("%.1f %%", Double.valueOf(datos[2])), String.format("%.1f %% (%4.1f MB)", Double.valueOf(datos[3]), memoria * Double.valueOf(datos[3]) / (100 * 1024 * 1024)), datos[1]};
            t2.addRow((Object[]) x2);
        }

        for (int k = 0; k < 100; k++) {
            if (t == null && t1 == null && t2 == null) {
                inicializar();
            }
        }

    }
}
