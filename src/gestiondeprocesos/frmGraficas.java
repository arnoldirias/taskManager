/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestiondeprocesos;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Timer;

/**
 *
 * @author Arnold_Irias
 */
public class frmGraficas extends javax.swing.JFrame {

    GraficaMemoria Gmemoria = new GraficaMemoria("Uso Memoria");
    GraficaProcesador grafica = new GraficaProcesador("Uso SWAP");
    GraficaSwap Gswap = new GraficaSwap("Uso SWAP");
    InformacionHSSistema miSistema = new InformacionHSSistema();

    public frmGraficas() {
        initComponents();
        jpnlProcesador2.setVisible(true);
        //grafica.GraficaProcesadors(miSistema);
        //grafica.nuevaGrafica();
        //grafica.pack();
        //jpnlProcesador2.add(grafica.getPanel());
        //jpnlProcesador2.setVisible(true);

        jpnlMemoria.setVisible(true);
        Gmemoria.GraficaMemorias(miSistema);
        Gmemoria.nuevaGrafica();
        Gmemoria.pack();
        jpnlMemoria.add(Gmemoria.getPanel());
        jpnlMemoria.setVisible(true);

        jpnlSwap.setVisible(true);
        Gswap.GraficaSwaps(miSistema);
        Gswap.nuevaGrafica();
        Gswap.pack();
        jpnlSwap.add(Gswap.getPanel());
        jpnlSwap.setVisible(true);

        timerCpu.start();
        timerMemoria.start();
        timerSwap.start();

    }

    Timer timerMemoria = new Timer(1000, new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            Gmemoria.nuevaGrafica();
            Gmemoria.pack();
            jpnlMemoria.remove(0);
            jpnlMemoria.updateUI();
            jpnlMemoria.add(Gmemoria.getPanel());

        }
    });
    Timer timerCpu = new Timer(1000, new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            jpnlProcesador2.setVisible(true);
            RingChartDemo2 RC;
            try {
                RC = new RingChartDemo2("USO");
                RC.pack();
                //RC.setVisible(true);

                jpnlProcesador2.remove(0);
                jpnlProcesador2.updateUI();
                jpnlProcesador2.add(RC.miPanel, 0);
                jpnlProcesador2.setVisible(true);
            } catch (InterruptedException ex) {
                Logger.getLogger(frmGraficas.class.getName()).log(Level.OFF, null, ex);
            }

        }
    });

    Timer timerSwap = new Timer(1000, new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            Gswap.nuevaGrafica();
            Gswap.pack();
            jpnlSwap.remove(0);
            jpnlSwap.updateUI();
            jpnlSwap.add(Gswap.getPanel());

        }
    });

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnlMemoria = new javax.swing.JPanel();
        jpnlProcesador2 = new javax.swing.JPanel();
        jpnlSwap = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gr√°ficas de uso");
        setResizable(false);

        jpnlMemoria.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jpnlMemoria.setPreferredSize(new java.awt.Dimension(500, 300));

        javax.swing.GroupLayout jpnlMemoriaLayout = new javax.swing.GroupLayout(jpnlMemoria);
        jpnlMemoria.setLayout(jpnlMemoriaLayout);
        jpnlMemoriaLayout.setHorizontalGroup(
            jpnlMemoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 498, Short.MAX_VALUE)
        );
        jpnlMemoriaLayout.setVerticalGroup(
            jpnlMemoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );

        jpnlProcesador2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jpnlProcesador2.setPreferredSize(new java.awt.Dimension(500, 300));

        jpnlSwap.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jpnlSwap.setPreferredSize(new java.awt.Dimension(500, 300));

        javax.swing.GroupLayout jpnlSwapLayout = new javax.swing.GroupLayout(jpnlSwap);
        jpnlSwap.setLayout(jpnlSwapLayout);
        jpnlSwapLayout.setHorizontalGroup(
            jpnlSwapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 498, Short.MAX_VALUE)
        );
        jpnlSwapLayout.setVerticalGroup(
            jpnlSwapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jpnlProcesador2Layout = new javax.swing.GroupLayout(jpnlProcesador2);
        jpnlProcesador2.setLayout(jpnlProcesador2Layout);
        jpnlProcesador2Layout.setHorizontalGroup(
            jpnlProcesador2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnlProcesador2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jpnlSwap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jpnlProcesador2Layout.setVerticalGroup(
            jpnlProcesador2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnlProcesador2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jpnlSwap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jpnlProcesador2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpnlMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpnlMemoria, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpnlProcesador2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jpnlMemoria;
    private javax.swing.JPanel jpnlProcesador2;
    private javax.swing.JPanel jpnlSwap;
    // End of variables declaration//GEN-END:variables
}
